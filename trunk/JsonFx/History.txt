Release History

v1.0.0903.15xx
- cleaned up parsing of server-code in attributes
- now driving the default for compacted scripts/css/merge off the compilation debug="[bool]" app setting (rather than always compacted)
  i.e. no flag switches based upon config, "?debug" is always debug, ?[sha1-hash] is always permanently cached, any other value is always compacted
- HtmlDistiller
	- added auto-link parsing (URLs in literals can be optionally converted to hyperlinks)
	- auto-link capability leverages further customization through FilterUrl method
	- added ability to change the truncation indicator (defaults to ellipsis)
	- improved interface for customizing
	- completely removed filtering responsibility from IHtmlWriter
	- added ability for HtmlFilter to directly call HtmlWriter

v1.0.0903.1309
- fixed complex attribute typo in JBST builder script
- enables creating events with closures during databinding

v1.0.0903.1209
- added ability to render .NET Regex as ECMAScript RegExp literals in script data blocks
- created an EcmaScriptWriter which can also serialize native non-JSON ECMAScript data types (e.g. DateTime, RegExp)

v1.0.0903.0714
- add new intrinsic member to JBSTs: this.count
  where this.index is the current data index, this.count is the number of data items being bound
- reduced extraneous whitespace nodes around templates
- added unwrapping of documentFragment results when only contain single element
- improved HtmlDistiller's ability to understand difference between tags and unescaped less-than literals
- updated StarterKit documentation

v1.0.0903.0509
- improved type coercion between sequences of strongly types objects
- refactored type-coercion code out of JsonReader into utility class

v1.0.0903.0408
- added ability to specify inline anonymous templates in JBST using declarative <jbst:control></jbst:control> syntax
- cleaned up calling template parts in the context of "this"

v1.0.0903.0309
- added unparsed block syntax <%# ... %> for inserting data that contains markup
- fixed bug where globalization keys weren't being correctly picked up in DOM attributes

v1.0.0903.0117
- added JsonML.BST.bind to dataBind and hydrate all in one step (including JsonFx behavior binding)
- deprecated JsonFx.UI.bind(jbst,data) in favor of myJBST.bind(data,index) on JBSTs
- updated documentation examples to use myJBST.bind
- deprecated JsonFx.Bindings.register(tag,css,bind,unbind) in favor of more flexible JsonFx.Bindings.add(selector,bind,unbind)
- enabled JsonFx.Bindings.add to accept any jQuery selector if jQuery is present
- eneabled native JsonFx.Bindings.add to accept lists of simple selectors and simple ID selectors
- updated documentation examples to use JsonFx.Bindings.add
- changed JsonML.BST from constructor to factory (i.e. "JsonML.BST(jbst);" rather than "new JsonML.BST(jbst);")
- allowed JsonML.BST factory to accept a function which switches templates based upon input data
- added JsonFx.Bindings.replace to further reduce redundant output of jbst server control

v1.0.0902.2522
- fix for binding issue where elements getting added may alter the set of elements still being processed
- being less aggressive about CF/LF suppression in JavaScript compaction to be more compatible with broken scripts
- fixed long-standing issue with JSLint which prevented upgrading to latest version of Crockford's code
- upgraded JSLINT to rev 2009-02-13
- adding basic IIS7 handler mappings to web.configs

v1.0.0902.1623
- added an InlineData property on the server jbst:control to directly serialize and bind one-time-use data without needing to name it

v1.0.0902.1608
- fixed a bug in CSS compaction when specifying web fonts with @font-face blocks:
	- fixed at-rules which do not have a value after the identifier
	- fixed at-rules with blocks of declarations (rather than rule-sets)
	- improved whitespace removal in at-rules with blocks of declarations
- fixed a situation where a JBST expression result of undefined or null could generate DOM attributes with that value
- changed "BuildTools" namespace to "JsonFx.BuildTools" for consistency
- enabled ResourceBuildProviders to be able to load referenced assemblies in Mono
- enabled XML comment documentation output and added project warning suppression for 1570,1571,1572,1573,1591,1592

v1.0.0902.0823
- added ability to emit data blocks directly from server jbst:Control (doesn't require additional ScriptDataBlock)
- changed IHttpHanderFactory implementations from explicit to virtual to allow easier extension
- added ability to manually control emitting of localization values
- began refactoring behavior bindings to allow more flexible mappings

v1.0.0902.0201
- split CompiledBuildResult into a couple interfaces for better modularity and extensibility
- improved generated C#
- simplified and reduced the bulk of generated JSON-RPC proxies
- JSON-RPC proxies should cache better now that SHA1 isn't rolling with each rebuild
- added better ECMAScript indentifier checks for various components
- improved globalization for local resources

v1.0.0901.2923
- fixed long-standing caching bug whereby .NET added "Vary: *" cache header
- added hooks to reference resources which precompiled by BuildManager in ResourceIncludes
- reduced one BuildManager instantiation ResourceHandler
- added assembly to type-hinting in JSON serializer
- improved error messaging in object instantiation in JSON serializer
- removed auto-injection of JsonFx version number into compacted merge scripts

v1.0.0901.2513
- enabled JBST Controls and PlaceHolders to specify data and index as code expression
- added first pass at a JBST server control for specifying page hooks for JSBT insertion
- clean up of JBST compiler generated code
- improved compatibility with Mono Framework
- full compatibility with environments missing MSScriptControl
- added "JSLINT" conditional compilation symbols to enable/disable JSLint compilation.
- removed jsonfx:options attribute auto-parsing

v1.0.0901.1919:
- begining to better leverage jQuery if present
- added ability to programmatically suppress JBST output with jbst:visible="<%= false %>"
- improving resource compilation error reporting (css, js, jbst, merge)
- bubbling up compilation errors to page level
- fixed bug where under certain circumstances error wasn't being properly reported
- using SHA1 rather than MD5 for resource cache keys/ETags
- added switch to control how stylesheets are attached (link, style import)
- added pass-through for any attributes added to ResourceInclude (e.g. media="print" rel="alternate")

v1.0.0901.1017:
- improved JBST compilation to support <script type="text/javascript">...</script> as equivalent to <%! ... %>
- allows JavaScript syntax highlighting in JBST init scripts

v1.0.0901.0318:
- improved deserialization of numeric flags enums
- improved type inference of JsonReader interface in C# 3.0
- improved deserialization of typed generic dictionaries

v1.0.0812.2115:
- fixed Opera bug in json2.js (Opera doesn't like escaped unicode chars in RegExp literals)
- added workaround for Opera bug in JsonFx_History.js

v1.0.0812.1208:
- cleaned up the project examples & templates
- improved the JSON-RPC templates

v1.0.0812.0717:
- added ability to add custom headers to service requests on a global or per-service request via callback
- disabled Ajax request timeout when is a debug build
- fixed a typo in the JSON-RPC Visual Studio Template
- updated to latest json2.js (2008-11-19)

v1.0.0812.0612:
- made maximum depth of JSON serialization configurable
- added string to char type coercion
- improved type coercion of JSON-RPC params

v1.0.0812.0116:
- Redeployment of v1.0.0812.0114 (change wasn't properly picked up)

v1.0.0812.0114:
- Rolled back a breaking change in serializer which caused JSON-RPC param list to incorrectly deserialize

v1.0.0811.2910:
- Enabled serialization of Anonymous Types
- Improved efficiency of serialization
- Added improved CoerceType syntax

v1.0.0811.1622:
- Added ScriptDateBlock control for easily emitting JavaScript data into page
- Added ability to arbitrarily serialize DateTime objects

v1.0.0811.1512:
- Fixed bug where ResourceCodeProviders were bleeding data when reused by ASP.NET BuildManager

v1.0.0811.1220:
- Fixed JsonReader.CoerceType when converting from number to enum

v1.0.0811.0112:
- Improved debugging mode

v1.0.0810.2617:
- Improved error messaging

v1.0.0810.2611:
- Strongly-typed some JSON-RPC parameters
- Improved setup documentation around MSScriptControl
- Made build-time continue even when JScript COM Interop not registered

v1.0.0810.2108:
- Made build-time JScript COM Interop more robust on Win2K8 x64

v1.0.0810.1810:
- Fixed breaking change in C# 3.0 access modifiers
- Fixed typo in Visual Studio templates description

v1.0.0810.1508:
- Made script errors warnings until expose a mechanism to choose

v1.0.0810.0513:
- Added source for JsonFx.BuildTools (rather than including as assembly)
- Renamed JsonMLBrowserModule to JsonFxBrowserModule and removed from Template web.config

v1.0.0808.0316:
- Added full JBST support

v1.0.0801.2409:
- Made number parsing more efficient (no try-catching)
- Number parsing better obeys expected types

v1.0.0712.1623:
- Simplified object serialization to include any IDictionary with String keys
- Made DateTime serialization conform to ISO-8601

v1.0.0710.2409:
- Fixed strong-type bug

v1.0.0710.2305:
- Fixed "-Infinity" causing "Unterminated Number" exception

v1.0.0710.2017:
- Improved literal parsing to not use Substring()

v1.0.0710.2012:
- Fixed bug in array auto-typing
- Fixed bug with reading empty objects
- Improved specificity of error messages
- Added line/col numbers to errors

v1.0.0710.2009:
- Renaming namespace JsonFx.Serialization -> JsonFx.Json
- Rename namespace JsonFx.Services -> JsonFx.JsonRpc

v1.0.0710.1908:
- Now encoding '<' as it can cause issues in script tags

v1.0.0706.0000:
- Fixed bugs where if new compacted resource was shorter would leave remnants of old content
- Improved CssUserAgent for Safari 3 betas
- Added ETag support

v1.0.0705.1916:
- Fixed bug where ResourceCodeProvider was being reused and resources were experiencing collisions

v1.0.0705.1608:
- Fixed bug where BuildManager fails when resources aren't prebuilt
- Added "X-JsonFx-Version" response header

v1.0.0705.1501:
- Fixed bug in JsonMLTextWriter, where was outputting HTML comments
- Suppressed error where BuildManager fails when resources aren't prebuilt

v1.0.0705.0801:
- Added basic History example
- Now supports full error reporting and compaction of CSS & JavaScript
- Cleaned up scripts based upon latest JSLint restrictions
- Fixed error formatting in BuildTools
- Trapping x64 exceptions in BuildTools (MSScriptControl requires x86)
- Made JsonFx strongly signed enabling placement in the GAC

v1.0.0704.2321:
- Fixed bug in JsonMLTextWriter, where wouldn't write attributes of an empty element

v1.0.0704.2320:
- Removed need for .browser files by adding HttpModule:
- Produces more consistent async request behavior across platforms
- Simplifies integration by reducing feature to a single line in web.config
- Moved ASP.NET .browser "fixes" into single Other.browser file
- Pruned some obsolete/dormant classes

v1.0.0704.2210:
- Cleaned up display of JSON-RPC Service test
- Added ability to specify the javascript proxy namespace on a JSON-RPC service
- Made service proxy a true singleton, rather than an instance in a static field
- Cleaned up JsonService attributes a bit to more closely align with ASP.NET WebServices
- Added example WebService which uses the same class as the JsonService (to further demonstrate similarities)
- Fixed some minor bugs in edge case service errors
- Added ~/Download/LatestBuild.ashx so download URL doesn't need to change

v1.0.0704.1900:
- Added bare bones example but shows most concepts
- Added Example pages ~/Services/ and ~/Effects/ with some light instructions on them
- CSS compaction isn't quite finished

v1.0.0703.1808:
- Added auto-versioning to assembly and scripts
- Update of script compactor to produce custom timestamps

v1.0.0703.0319:
- Fixed empty array deserialization bug
- Fixed crash when bad JSON in ServiceTest
- Beginning better exception messaging